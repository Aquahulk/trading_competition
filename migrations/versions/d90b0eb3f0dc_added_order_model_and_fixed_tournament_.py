"""Added Order model and fixed Tournament structure

Revision ID: d90b0eb3f0dc
Revises: 53e3b3b4a784
Create Date: 2025-02-09 19:25:20.927953

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = 'd90b0eb3f0dc'
down_revision = '53e3b3b4a784'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('order',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('symbol', sa.String(length=10), nullable=False),
    sa.Column('order_type', sa.String(length=10), nullable=False),
    sa.Column('quantity', sa.Integer(), nullable=False),
    sa.Column('price', sa.Float(), nullable=False),
    sa.Column('date', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('user_tournament',
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('tournament_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['tournament_id'], ['tournament.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('user_id', 'tournament_id')
    )
    op.drop_constraint('tournament_user_id_fkey', 'tournament', type_='foreignkey')
    op.drop_column('tournament', 'user_id')
    op.alter_column('user', 'password_hash',
               existing_type=sa.VARCHAR(length=256),
               nullable=False)
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column('user', 'password_hash',
               existing_type=sa.VARCHAR(length=256),
               nullable=True)
    op.add_column('tournament', sa.Column('user_id', sa.INTEGER(), autoincrement=False, nullable=False))
    op.create_foreign_key('tournament_user_id_fkey', 'tournament', 'user', ['user_id'], ['id'])
    op.drop_table('user_tournament')
    op.drop_table('order')
    # ### end Alembic commands ###
from werkzeug.security import generate_password_hash
from sqlalchemy.sql import table, column
import sqlalchemy as sa

# Define table reference
user_table = table(
    'user',
    column('id', sa.Integer),
    column('password_hash', sa.String)
)

def upgrade():
    # ✅ Set a default hashed password for existing users before altering the column
    op.execute(
        user_table.update().where(user_table.c.password_hash == None)
        .values(password_hash=generate_password_hash("defaultpassword123"))
    )

    # ✅ Now alter the column safely
    op.alter_column('user', 'password_hash', existing_type=sa.String(), nullable=False)
